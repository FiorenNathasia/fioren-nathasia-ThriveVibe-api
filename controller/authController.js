const express = require("express");
const router = express.Router();
const knex = require("knex")(require("../knexfile"));
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");

const login = async (req, res) => {
  const { email, password } = req.body;

  if (!email || !password) {
    res.status(400).send("Please enter the required fields");
    return;
  }

  // Find the user
  const user = await knex("users").where({ email: email }).first();
  if (!user) {
    res.status(400).send("Invalid email");
    return;
  }

  // Check the password
  const isPasswordCorrect = bcrypt.compareSync(password, user.password);
  if (!isPasswordCorrect) {
    res.status(400).send("Invalid password");
    return;
  }

  // Generate a token
  // ðŸŒŸ 1. Token is generated by the server, containing who this user is
  const token = jwt.sign(
    { id: user.id, email: user.email },
    process.env.JWT_KEY,
    { expiresIn: "24h" }
  );

  res.json({ token: token });
};

module.exports = {
  login,
};
